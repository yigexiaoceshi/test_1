{
  "uid" : "a3bdc1f787302052",
  "name" : "查询已授权数据接口",
  "fullName" : "test_shujvxietong.Test_I_data#test_listshouquandata",
  "historyId" : "0b1037b92299c3ef190fe42e583af973",
  "time" : {
    "start" : 1621995909420,
    "stop" : 1621995909448,
    "duration" : 28
  },
  "status" : "failed",
  "statusMessage" : "pytest_assume.plugin.FailedAssumption: \n2 Failed Assumptions:\n\ntest_shujvxietong.py:61: AssumptionFailure\n>>\tpytest.assume(str(result['code']) == '200')\nAssertionError: assert False\n\ntest_shujvxietong.py:62: AssumptionFailure\n>>\tpytest.assume(result['success'] == True)\nAssertionError: assert False",
  "statusTrace" : "tp = <class 'pytest_assume.plugin.FailedAssumption'>, value = None, tb = None\n\n    def reraise(tp, value, tb=None):\n        try:\n            if value is None:\n                value = tp()\n            if value.__traceback__ is not tb:\n>               raise value.with_traceback(tb)\nE               pytest_assume.plugin.FailedAssumption: \nE               2 Failed Assumptions:\nE               \nE               test_shujvxietong.py:61: AssumptionFailure\nE               >>\tpytest.assume(str(result['code']) == '200')\nE               AssertionError: assert False\nE               \nE               test_shujvxietong.py:62: AssumptionFailure\nE               >>\tpytest.assume(result['success'] == True)\nE               AssertionError: assert False\n\n/usr/local/lib/python3.8/site-packages/six.py:702: FailedAssumption",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "pytest_assume.plugin.FailedAssumption: \n2 Failed Assumptions:\n\ntest_shujvxietong.py:61: AssumptionFailure\n>>\tpytest.assume(str(result['code']) == '200')\nAssertionError: assert False\n\ntest_shujvxietong.py:62: AssumptionFailure\n>>\tpytest.assume(result['success'] == True)\nAssertionError: assert False",
    "statusTrace" : "tp = <class 'pytest_assume.plugin.FailedAssumption'>, value = None, tb = None\n\n    def reraise(tp, value, tb=None):\n        try:\n            if value is None:\n                value = tp()\n            if value.__traceback__ is not tb:\n>               raise value.with_traceback(tb)\nE               pytest_assume.plugin.FailedAssumption: \nE               2 Failed Assumptions:\nE               \nE               test_shujvxietong.py:61: AssumptionFailure\nE               >>\tpytest.assume(str(result['code']) == '200')\nE               AssertionError: assert False\nE               \nE               test_shujvxietong.py:62: AssumptionFailure\nE               >>\tpytest.assume(result['success'] == True)\nE               AssertionError: assert False\n\n/usr/local/lib/python3.8/site-packages/six.py:702: FailedAssumption",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "4322276dd967fe4e",
      "name" : "log",
      "source" : "4322276dd967fe4e.txt",
      "type" : "text/plain",
      "size" : 284
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "feature",
    "value" : "数据协同"
  }, {
    "name" : "story",
    "value" : "我的数据"
  }, {
    "name" : "tag",
    "value" : "wodedata"
  }, {
    "name" : "suite",
    "value" : "test_shujvxietong"
  }, {
    "name" : "subSuite",
    "value" : "Test_I_data"
  }, {
    "name" : "host",
    "value" : "zhouchengjiedeMacBook-Pro.local"
  }, {
    "name" : "thread",
    "value" : "25156-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_shujvxietong"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ "wodedata" ]
  },
  "source" : "a3bdc1f787302052.json",
  "parameterValues" : [ ]
}