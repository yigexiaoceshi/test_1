{
  "uid" : "65ea3becdbc0d778",
  "name" : "我的服务-列表查询",
  "fullName" : "test_proxy.Test_my_proxy#test_my_proxy_list",
  "historyId" : "194d098432c4024d5dea6ccddfc7139b",
  "time" : {
    "start" : 1619507159177,
    "stop" : 1619507159177,
    "duration" : 0
  },
  "status" : "broken",
  "statusMessage" : "KeyError: 'data'",
  "statusTrace" : "@pytest.fixture(scope=\"module\")\n    def test_myproxy():\n        res_add=ad.add_newproxy()\n        name=res_add[1]\n        res=res_add[0]\n>       res_mp=mp.my_proxy_list(name)\n\ntest_proxy.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Customer_platform.API.proxy.my_proxy.My_proxy object at 0x1051eb040>, appCode = 'zcj48786249'\n\n    def my_proxy_list(self,appCode):\n        url=f'{self.url}/api/v2/agent/proxyServer/myServer/myList'\n        header={\"Content-Type\":\"application/json;charset=UTF-8\"}\n        data={\n            \"reqBody\": {\n                \"page\": 1,\n                \"size\": 10,\n                \"appCode\": appCode\n            },\n            \"reqHeader\": {\n                \"clientType\": \"web\",\n                \"requestId\": \"123456789012\",\n                \"requestTime\": \"1615343570119\",\n                \"token\": self.token,\n                \"userId\": self.userid,\n                \"userName\": self.username\n            }\n        }\n        res=requests.post(url,headers=header,data=json.dumps(data)).json()\n>       id=res[\"data\"][\"list\"][0][\"id\"]\nE       KeyError: 'data'\n\n../../Customer_platform/API/proxy/my_proxy.py:38: KeyError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "_session_faker",
    "time" : {
      "start" : 1619507158729,
      "stop" : 1619507158782,
      "duration" : 53
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "test_myproxy",
    "time" : {
      "start" : 1619507158782,
      "stop" : 1619507159088,
      "duration" : 306
    },
    "status" : "broken",
    "statusMessage" : "KeyError: 'data'\n",
    "statusTrace" : "  File \"/usr/local/lib/python3.8/site-packages/pluggy/callers.py\", line 187, in _multicall\n    res = hook_impl.function(*args)\n  File \"/usr/local/lib/python3.8/site-packages/_pytest/fixtures.py\", line 1117, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/usr/local/lib/python3.8/site-packages/_pytest/fixtures.py\", line 924, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/Users/apple/PycharmProjects/zhongshujiaoben/Test_case/Test_APIcase/test_proxy.py\", line 24, in test_myproxy\n    res_mp=mp.my_proxy_list(name)\n  File \"/Users/apple/PycharmProjects/zhongshujiaoben/Customer_platform/API/proxy/my_proxy.py\", line 38, in my_proxy_list\n    id=res[\"data\"][\"list\"][0][\"id\"]\n",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  } ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "epic",
    "value" : "代理服务"
  }, {
    "name" : "feature",
    "value" : "我的服务"
  }, {
    "name" : "suite",
    "value" : "test_proxy"
  }, {
    "name" : "subSuite",
    "value" : "Test_my_proxy"
  }, {
    "name" : "host",
    "value" : "zhouchengjiedeMacBook-Pro.local"
  }, {
    "name" : "thread",
    "value" : "8778-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_proxy"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "65ea3becdbc0d778.json",
  "parameterValues" : [ ]
}